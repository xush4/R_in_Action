par(fig = c(0.7, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.43, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.7, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.49, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.7, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
#在坐标轴外添加箱型图
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.5, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.7, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
#在坐标轴外添加箱型图
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.7, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.5, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.5, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.5, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.55, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
help("jepg")
help("jpeg")
#在坐标轴外添加箱型图
opar <- par(no.readonly = TRUE)
jpeg("Graph3-4.jpg", width = 600, height = 600)#输出jpg
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.55, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
dev.off()
par(opar)
par(fig = c(0, 0.8, 0, 0.8), width = 600, height = 600)
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.55, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight",, width = 600, height = 600)
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.55, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight", width = 600, height = 600)
par(fig = c(0, 0.8, 0.492, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.55, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
install.packages(c('reshape', 'sqldf'))
# Recoding variables
leadership <- within(leadership, {
agecat <- NA
agecat[age > 75] <- "Elder"
agecat[age >= 55 & age <= 75] <- "Middle Aged"
agecat[age < 55] <- "Young"
})
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08",
"5/1/09")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors = FALSE)
# the individual vectors are no longer needed
rm(manager, date, gender, age, q1, q2, q3, q4, q5)
# Recoding variables
leadership <- within(leadership, {
agecat <- NA
agecat[age > 75] <- "Elder"
agecat[age >= 55 & age <= 75] <- "Middle Aged"
agecat[age < 55] <- "Young"
})
leadership
names(leadership)[2]="testdate"
names(leadership)[6:10]=c("Item1","Item2","Item3","Item4","Item5")
leadership
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08",
"5/1/09")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors = FALSE)
# the individual vectors are no longer needed
rm(manager, date, gender, age, q1, q2, q3, q4, q5)
#另一种
names(leadership)[2]="testdate"
names(leadership)[5:9]=c("Item1","Item2","Item3","Item4","Item5")
leadership
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
mydate[1]-mydate[2]
mydates[1]-mydates[2]
a=mydates[1]-mydates[2]
a
Datelength=as.numeric(mydates[1])-as.numeric(mydates[2])
Sys.Date()
date()
#例如输出周几：
today=Sys.Date()
format(today, format = "%A")
Datelength=as.numeric(mydates[1]-mydates[2])
Datelength
Weeklength=as.numeric(mydates[1],mydates[2],units="week")
weeklength
Weeklength
Weeklength=as.numeric(difftime(mydates[1],mydates[2],units="week"))
a <- c(1, 2, 3)
a
is.numeric(a)
is.vector(a)
a <- as.character(a)
a
is.numeric(a)
is.vector(a)
is.character(a)
leadership
newdata <- leadership[order(age), ]
leadership[order(age), ]
newdata <- leadership[order(leadership$age), ]
newdata
newdata2 = leadership[order(leadership$gender, -leadership$age), ]#按照年龄排序（升序）
newdata2
total= merge(leadership,leadership,by="ID")
id1 <- c(2, 3, 4, 5, 7)
heights <- c(62, 65, 71, 71, 67)
df1 <- data.frame(id = id1, heights)
id2 <- c(1, 2, 6:10)
weights <- c(147, 113, 168, 135, 142, 159, 160)
df2 <- data.frame(id = id2, weights)
merge(df1, df2, all = FALSE)
merge(df1, df2, by="ID", all = FALSE)
merge(df1, df2, by="id", all = FALSE)
weights = merge(df2, df1, by="id", all = FALSE)
weights
data3 = merge(df2, df1, by="id", all = TRUE)
data3
cbind(leadership,leadership)
rbind(leadership,leadership)
newdata <- leadership[myvars]
myvars <- paste("q", 1:5, sep = "")
newdata <- leadership[myvars]
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08",
"5/1/09")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors = FALSE)
# the individual vectors are no longer needed
rm(manager, date, gender, age, q1, q2, q3, q4, q5)
myvars <- paste("q", 1:5, sep = "")
newdata <- leadership[myvars]
newdata
newdata1 <- leadership[,c(6:10)]
newdata1 <- leadership[,c(6:9)]
newdata1 <- leadership[,c(5:9)]
newdata1
newdata=leadership[c(-8,-9)]
newdata
newdata=leadership[,c(-8,-9)]#删除第8第9列
newdata
rawdata=leadership
rawdata
newdata1=leadership[,c(-8,-9)]#删除第8第9列
rawdata$q3=null; rawdata$q4=null
rawdata$q3=NULL; rawdata$q4=NULL
rawdata
leadership$age > 30), ]
newdata <- leadership[which(leadership$gender == "M" & leadership$age > 30), ]
newdata
leadership$date <- as.Date(leadership$date, "%m/%d/%y")
startdate <- as.Date("2009-01-01")
enddate <- as.Date("2009-10-31")
newdata <- leadership[leadership$date >= startdate &
leadership$date <= enddate, ]
#选取一段时间内的数据
newdata
newdata <- subset(leadership, gender == "M" & age >
25, select = gender:q4)
newdata
mysample=leadership[sample(1:nrow(leadership),2,replace=false)]
mysample=leadership[sample(1:nrow(leadership),2,replace=FALSE)]
mysample1=leadership[sample(1:nrow(leadership),2,replace=FALSE)]
mysample2=leadership[sample(1:nrow(leadership),2,replace=FALSE)]
mysample1
mysample2
leadership
sample(1:nrow(leadership),2,replace=FALSE)
mysample1=leadership[,sample(1:nrow(leadership),2,replace=FALSE)]
mysample2=leadership[,sample(1:nrow(leadership),2,replace=FALSE)]
mysample1
mysample1=leadership[sample(1:nrow(leadership),2,replace=FALSE),]
mysample2=leadership[sample(1:nrow(leadership),2,replace=FALSE),]
mysample1=leadership[sample(1:nrow(leadership),2,replace=FALSE),]
mysample1
mysample2
x=c("Front","Back")
sample(x,size=20,replace=T,prob=c(0.8,0.2))
#抛硬币，正面朝上0.8，反面朝上0.2抛20次。
sample(x,size=200,replace=T,prob=c(0.8,0.2))
library(sqldf)
row.names = TRUE)
newdf <- sqldf("select * from mtcars where carb=1 order by mpg",
row.names = TRUE)
newdf <- sqldf("select avg(mpg) as avg_mpg, avg(disp) as avg_disp,
gear from mtcars where cyl in (4, 6) group by gear")
x <- pretty(c(-3,3), 30)
x
x <- pretty(c(-3,3), 30)
#在 -3 到 3 之间，每0.2生成一个数
y <-dnorm(x)
plot(x, y,
type="l",
xlab="NormalDeviate",
ylab="Density",
yaxs="i"
)
runif(5)
runif(5)
set.seed(1234)
runif(5)
runif(5)
library(MASS)
ptions(digits=3)
set.seed(1234)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix( c(15360.8, 6721.2, -47.1,
6721.2, 4700.9, -16.5,
-47.1,  -16.5,   0.3), nrow=3, ncol=3)
mydata <- mvrnorm(500, mean, sigma)
mydata <- as.data.frame(mydata)
names(mydata) <- c("y", "x1", "x2")
dim(mydata)
head(mydata, n=10)
options(digits=3)
set.seed(1234)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix( c(15360.8, 6721.2, -47.1,
6721.2, 4700.9, -16.5,
-47.1,  -16.5,   0.3), nrow=3, ncol=3)
mydata <- mvrnorm(500, mean, sigma)
mydata <- as.data.frame(mydata)
names(mydata) <- c("y", "x1", "x2")
dim(mydata)
head(mydata, n=10)
mydata <- matrix(rnorm(30), nrow=6)
mydata
apply(mydata, 1, mean)
apply(mydata, 2, mean)
apply(mydata, 2, mean, trim=.2)
options(digits=2)
Student <- c("John Davis", "Angela Williams",
"Bullwinkle Moose", "David Jones",
"Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student, Math, Science, English,
stringsAsFactors=FALSE)
roster
z <- scale(roster[,2:4])
z
score <- apply(z, 1, mean)
score
roster <- cbind(roster, score)
#把均值（列）合并入roster
y <- quantile(score, c(.8,.6,.4,.2))
y
#求出0.8（前20%），0.6，0.4，0.2分位数
roster$grade[score >= y[1]] <- "A"
roster$grade[score < y[1] & score >= y[2]] <- "B"
roster$grade[score < y[2] & score >= y[3]] <- "C"
roster$grade[score < y[3] & score >= y[4]] <- "D"
roster$grade[score < y[4]] <- "F"
#给出等第
name <- strsplit((roster$Student), " ")
lastname <- sapply(name, "[", 2)
firstname <- sapply(name, "[", 1)
roster <- cbind(firstname,lastname, roster[,-1])
roster <- roster[order(lastname,firstname),]
roster
y
ystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric=FALSE, print=TRUE)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
<- mystats(x, parametric=FALSE, print=TRUE)
y <- mystats(x, parametric=FALSE, print=TRUE)
mydate <- function(type="long") {
switch(type,
long =  format(Sys.time(), "%A %B %d %Y"),
short = format(Sys.time(), "%m-%d-%y"),
cat(type, "is not a recognized type\n"))
}
mydate("long")
mydate("short")
mydate()
mydate("medium")
cars <- mtcars[1:5, 1:4]
cars
t(cars)
options(digits=3)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,gear),
FUN=mean, na.rm=TRUE)
aggdata
airquality
head(airquality)
aql <-melt(airquality, id.vars = c("month","day"),
variable.name ="climate_variable",   value.name ="climate_value")
library("reshape")
aql <-melt(airquality, id.vars = c("month","day"),
variable.name ="climate_variable",   value.name ="climate_value")
aql <-melt(airquality, id.vars = c("Month","Day"),
variable.name ="climate_variable",   value.name ="climate_value")
head(aql)
aql <-melt(airquality, id.vars = c("Month","Day"),
variable.name ="climate_variable", value.name ="climate_value")
head(aql)
aqw <- dcast(aql, month + day ~ variable)
aqw <- cast(aql, month + day ~ variable)
aqw <- cast(aql, Month + Day ~ variable)
head(aqW)
aqw <- cast(aql, Month + Day ~ variable)
head(aqw)
cast(aql, month ~variable, fun.aggregate = mean, na.rm = TRUE)
cast(aql, Month ~variable, fun.aggregate = mean, na.rm = TRUE)
cast(aqw, Month ~variable, fun.aggregate = mean, na.rm = TRUE)
cast(aql, Month ~variable, fun.aggregate = mean, na.rm = TRUE)
cast(aql, Month~variable, mean)
cast(aql, Month~variable, mean, na.rm = TRUE)
cast(aql, Month~variable, mean, na.omit)
cast(na.omit(aql), Month~variable, mean)
library("reshape2")
aql <-melt(airquality, id.vars = c("Month","Day"),
variable.name ="climate_variable", value.name ="climate_value")
head(aql)
aqw <- cast(aql, Month + Day ~ variable)
head(aqw)
#数据算平均值
aql=na.omit(aql)
cast(na.omit(aql), Month~variable, mean)
aql
is.numeric(aql$value)
cast(aql, Month~variable, mean)
aql$id=rownames(aql)
cast(aql, Month~variable, mean)
dcast(aql, Month~variable, mean)
dcast(aql, Month~variable, fun.aggregate=mean,na.rm=T)
aql <-melt(airquality, id.vars = c("Month","Day"),
variable.name ="climate_variable", value.name ="climate_value")
dcast(aql, Month ~ climate_variable, fun.aggregate=mean,na.rm=T)
str(aql)
aql <-melt(airquality, id.vars = c("Month","Day"), variable.name ="climate_variable", value.name ="climate_value")
str(aql)
library(reshape2)
dcast(aql, Month ~ variable, fun.aggregate=mean, na.rm=T)
library(base)
dcast(aql, Month ~ variable, fun.aggregate=mean, na.rm=T)
dcast(aql, Month ~ variable, mean, na.rm=T)
dcast(aql, Month ~ variable, "mean", na.rm=T)
cast(aql, Month ~ variable, mean, na.rm=T)
head(airquality)
#使用melt函数：
library("reshape")
library("reshape2")
aql <-melt(airquality, id.vars = c("Month","Day"), variable.name ="climate_variable", value.name ="climate_value")
#把各项天气情况据数据分开，对于每一项气象状况按月、日排序。
head(aql)
aqw <- cast(aql, Month + Day ~ variable)
#把数据按月日整合回去
head(aqw)
#数据算平均值
cast(aql, Month ~ variable, mean, na.rm=T)
